{"version":3,"sources":["redux/actionCreators/positionAction.js","component/SettingPositions/SettingPositions.jsx"],"names":["positionsUpdate","type","POSITIONS_UPDATE","positionsRequestSeccessed","data","POSITIONS_REQUEST_SUCCESSED","memo","props","dispatch","useDispatch","isUpdate","useSelector","state","positions","shallowEqual","list","useState","route","useLayoutEffect","queryApi","actionSuccessed","onFavorites","useCallback","id","actionUpdate","method","level","Number","find","item","List"],"mappings":"oMAEaA,EAAkB,iBAAO,CAAEC,KAAMC,MACjCC,EAA4B,SAACC,GAAD,MAAW,CAClDH,KAAMI,IACND,S,QC4CaE,0BAxCU,SAACC,GACxB,IAAMC,EAAWC,cACXC,EAAWC,aACf,SAACC,GAAD,OAAWA,EAAMC,UAAUH,WAC3BI,KAEIC,EAAOJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUE,OAAMD,KANxB,EAOlBE,mBAAS,aAAlBC,EAP2B,oBAQlCC,2BAAgB,WACdV,EACEW,YAAS,CACPC,gBAAiBjB,EACjBc,aAGH,CAACP,EAAUF,EAAUS,IACxB,IAAMI,EAAcC,uBAClB,SAACC,GACCf,EACEW,YAAS,CACPI,KACAC,aAAcxB,EACdiB,QACAQ,OAAQ,MACRrB,KAAM,CACJsB,MAAOC,QAAQZ,EAAKa,MAAK,SAACC,GAAD,OAAUA,EAAKN,KAAOA,KAAIG,aAK3D,CAACX,EAAMP,EAAUS,IAEnB,OACE,oCACE,sFACA,kBAACa,EAAA,EAAD,CAAMf,KAAMA,EAAMM,YAAaA","file":"static/js/3.a2303c5e.chunk.js","sourcesContent":["import { POSITIONS_REQUEST_SUCCESSED, POSITIONS_UPDATE } from '../constants';\r\n\r\nexport const positionsUpdate = () => ({ type: POSITIONS_UPDATE });\r\nexport const positionsRequestSeccessed = (data) => ({\r\n  type: POSITIONS_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\n","import React, { memo, useLayoutEffect, useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\nimport {\r\n  positionsRequestSeccessed,\r\n  positionsUpdate,\r\n} from '../../redux/actionCreators/positionAction';\r\nimport List from '../List/List';\r\n\r\nconst SettingPositions = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isUpdate = useSelector(\r\n    (state) => state.positions.isUpdate,\r\n    shallowEqual,\r\n  );\r\n  const list = useSelector((state) => state.positions.list, shallowEqual);\r\n  const [route] = useState('positions');\r\n  useLayoutEffect(() => {\r\n    dispatch(\r\n      queryApi({\r\n        actionSuccessed: positionsRequestSeccessed,\r\n        route,\r\n      }),\r\n    );\r\n  }, [isUpdate, dispatch, route]);\r\n  const onFavorites = useCallback(\r\n    (id) => {\r\n      dispatch(\r\n        queryApi({\r\n          id,\r\n          actionUpdate: positionsUpdate,\r\n          route,\r\n          method: 'put',\r\n          data: {\r\n            level: Number(!list.find((item) => item.id === id).level),\r\n          },\r\n        }),\r\n      );\r\n    },\r\n    [list, dispatch, route],\r\n  );\r\n  return (\r\n    <>\r\n      <h2>Должности</h2>\r\n      <List list={list} onFavorites={onFavorites} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(SettingPositions);\r\n"],"sourceRoot":""}