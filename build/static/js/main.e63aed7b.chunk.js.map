{"version":3,"sources":["component/Sidebar/sidebarWrapper.module.css","component/IncidentHandleResponsible/styles.module.css","component/IncidentWorkButton/styles.module.css","component/IncidentWindowHeader/styles.module.css","component/IncidentStatus/styles.module.css","redux/actionCreators/queryApiAction.ts","serviceWorker.js","redux/reducer/authReducer.js","redux/reducer/categoryReducer.js","redux/reducer/incidentReducer.js","redux/reducer/statusReducer.js","redux/reducer/positionReducer.js","redux/reducer/usersReducer.js","redux/reducer/index.js","redux/actionCreators/authAction.js","redux/actionCreators/catalogAction.js","redux/actionCreators/incidentAction.js","redux/saga.js","redux/store.js","redux/actionCreators/departmentAction.js","redux/actionCreators/statusAction.js","component/Sidebar/Sidebar.tsx","component/Sidebar/SidebarHistory.tsx","component/Sidebar/SidebarWrapper.tsx","component/ModalWindow/ModalWindow.tsx","component/IncidentHandleStatus/IncidentHandleStatus.jsx","redux/actionCreators/usersAction.js","component/IncidentHandleResponsible/IncidentHandleResponsible.tsx","component/IncidentHandleDepartment/IncidentHandleDepartment.tsx","component/IncidentWorkButton/IncidentWorkButton.jsx","component/IncidentInWork/IncidentInWork.tsx","component/IncidentStatus/IncidentStatus.tsx","component/IncidentWindowHeader/IncidentWindowHeader.jsx","component/IncidentWindow/IncidentWindow.jsx","component/Incident/Incident.jsx","page/MainPage.jsx","component/SettingCatalog/SettingCatalog.jsx","component/SettingStatus/SettingStatus.jsx","page/SettingPage.jsx","component/CreateIncidentSelect/CreateIncidentSelect.jsx","component/CreateIncident/CreateIncident.jsx","component/Header/Header.jsx","page/MyIncidentPage.jsx","component/Alert/Alert.tsx","App.jsx","index.js","component/Sidebar/siderbar.module.css","component/Header/styles.module.css","component/List/ListButtonFavorites.tsx","component/List/ListItem.jsx","component/List/List.tsx","component/Sidebar/sidebarHistory.module.css","component/IncidentWindow/styles.module.css","component/List/styles.module.css","redux/constants.js"],"names":["module","exports","queryApi","route","actionSuccessed","actionUpdate","method","data","id","params","type","QUERY_API","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","isRequest","isLoading","user","list","isUpdate","department","myList","history","current","incident","isChange","CombineReducers","combineReducers","auth","action","AUTH_REQUEST_SENDD","AUTH_REQUEST_SUCCESSED","catalog","CATALOG_REQUEST_SENDD","CATALOG_REQUEST_SUCCESSED","DEPARTMENT_REQUEST_SUCCESSED","CATALOG_UPDATE","incidents","INCIDENT_REQUEST_SENDD","INCIDENT_REQUEST_SUCCESSED","MY_INCIDENT_REQUEST_SUCCESSED","INCIDENT_HISTORY_REQUEST_SUCCESSED","INCIDENT_CREATE","INCIDENT_CHOOSE","status","STATUS_REQUEST_SUCCESSED","STATUS_UPDATE","positions","POSITIONS_REQUEST_SUCCESSED","POSITIONS_UPDATE","users","USERS_REQUEST_SUCCESSED","USERS_UPDATE","authRequestSendd","authRequestSuccessed","categoryUpdate","categoryRequestSuccessed","incidentRequestSuccessed","incidentHistoryRequestSuccessed","incidentCreate","watchFetch","queryApiAsync","fetchAsync","fetchAsyncCatalog","fetchAsyncIncident","catalogPost","takeLatest","AUTH_FETCHING","CATALOG_FETCHING","takeEvery","CATALOG_POST","INCIDENT_FETCHING","Object","assign","call","axios","response","put","message","ip","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","departmentRequestSuccessed","statusUpdate","statusRequestSeccessed","memo","onClick","activeId","useState","key","jsxListItem","setJsxListItem","useEffect","Array","isArray","length","jsxItem","map","item","color","itemText","createdAt","Number","ListGroup","Item","className","styles","active","icon","icon_left","tags","push","faTag","responsible","faUserClock","item__body","item__id","item__text","item__text_span","name","item__date","locale","format","icon_right","faAngleRight","variant","onClickHistory","useSelector","shallowEqual","isLoadHistory","setIsLoadHistory","sidebarList","setSidebarList","responsibleUser","name1","name2","charAt","name3","category","property","option","statusId","Accordion","defaultActiveKey","accordion","Card","Toggle","as","Button","eventKey","Collapse","Body","body","title","blogTitle","setBlogTitle","Container","block","children","show","onSubmit","onOk","onHide","textOk","textNot","validated","Modal","aria-labelledby","centered","Header","closeButton","Title","Form","noValidate","undefined","Footer","dispatch","useDispatch","fullName","setValidated","newStatus","setNewStatus","newComment","setNewComment","event","preventDefault","stopPropagation","fnNewComment","text","userNumber","number","incidentId","currentTarget","checkValidity","find","Group","controlId","Label","Control","defaultValue","onChange","target","value","sort","a","b","rows","required","Feedback","usersRequestSeccessed","filterList","setFilterList","useLayoutEffect","filter","currentResponsible","setCurrentResponsible","currentResponsibleFullname","setCurrentResponsibleFullname","currentUser","departmentId","bodyData","comment","select","currentDepartmentId","setCurrentDepartmentId","departmentList","setDepartmentList","currentCategoryId","setCurrentCategoryId","categoryList","setCategoryList","currentPropertyId","setCurrentPropertyId","propertyList","setPropertyList","currentOptionId","setCurrentOptionId","optionList","setOptionList","currentCategory","properties","options","jsxSelector","setId","categoryId","propertyId","optionId","handleOpenModal","setFullName","showHanldeResponsible","SetShowHanldeResponsible","showHandleDepartment","setShowHandleDepartment","currentIncident","handleInWork","useMemo","level","bind","isConsent","responsibleButton","position","ButtonGroup","aria-label","bar","size","startWork","nameResponsible","fromNow","setVariant","disabled","myincident","header","showModal","setShowModal","setAccordion","Text","initiatorUser","email","phone1","date","Date","incidentData","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","comment__header","faAngleDown","Table","striped","bordered","table","comments","index","withTitle","updatedAt","badge","fetchIncident","useCallback","historyParams","chooseIncidentId","setChooseIncidentId","newCurrentIncident","thisHistory","thisList","Row","Col","xs","setParams","setTitle","props","departmentIdCurrent","setDepartmentIdCurrent","categoryIdCurrent","setCategoryIdCurrent","categoryJsx","setCategoryJsx","arguments","onDelete","conf","confirm","onFavorites","List","categorySubList","setCategorySubList","propertyJsx","setPropertyJsx","optionJsx","setOptionJsx","SettingPositions","React","lazy","setActiveId","jsxContent","setJsxContent","fallback","socket","openSocket","handleClose","dateNow","dateCreate","positionId","phone2","setIncident","currentIdCategory","setCurrentIdCategory","currentIdProperty","setCurrentIdProperty","currentIdOption","setCurrentIdOption","setCurrentCategory","newCurrentCategory","listSelect","setCurrent","CreateIncidentSelect","incidentFetching","emit","placeholder","listIncident","access","setAccess","Navbar","collapseOnSelect","expand","bg","Brand","aria-controls","Nav","nav","to","activeClassName","nav__button","Badge","CreateIncident","Link","href","avatar","Image","src","photo","roundedCircle","avatar__img","nav__item","faCog","useSound","volume","play","on","String","toast","info","role","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","get","res","exact","path","component","MainPage","SettingPage","MyIncidentPage","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","faStar","opposite","collapse","bottom","item_pointer","buttonGroup","buttonGroup_flexRow","noChange","faTrash","input","setInput","setFilter","toLowerCase","InputGroup","Prepend","faSearch","FormControl","aria-describedby","faFolderPlus","START_REQUEST_SUCCESSED","DEPARTMENT_FETCHING","DEPARTMENT_REQUEST_SENDD"],"mappings":"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","file":"static/js/main.e63aed7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"sidebarWrapper_block__QUjqB\",\"item\":\"sidebarWrapper_item__3QcyJ\",\"active\":\"sidebarWrapper_active__2RWeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_group\":\"styles_button_group__3GIll\",\"select\":\"styles_select__3GRUj\",\"select__option_placeholder\":\"styles_select__option_placeholder__M_qiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"styles_bar__3S0BO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3neJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__3b-_p\"};","import { QUERY_API } from '../constants';\r\n\r\ninterface IQueryApi {\r\n  route: string | undefined;\r\n  actionSuccessed?: (type: string, data: any) => void;\r\n  actionUpdate?: (type: string, data: any) => void;\r\n  method?: string | undefined;\r\n  data?: any;\r\n  id?: number | undefined;\r\n  params?: {};\r\n}\r\n\r\nexport const queryApi = ({\r\n  route,\r\n  actionSuccessed,\r\n  actionUpdate,\r\n  method,\r\n  data,\r\n  id,\r\n  params,\r\n}: IQueryApi) => ({\r\n  type: QUERY_API,\r\n  route,\r\n  actionSuccessed,\r\n  actionUpdate,\r\n  data,\r\n  id,\r\n  method,\r\n  params,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { AUTH_REQUEST_SENDD, AUTH_REQUEST_SUCCESSED } from '../constants';\r\n\r\nconst initialState = {\r\n  isRequest: false,\r\n  isLoading: false,\r\n  user: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_REQUEST_SENDD:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isRequest: true,\r\n      };\r\n    case AUTH_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        user: action.data[0],\r\n        isLoading: true,\r\n        isRequest: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CATALOG_REQUEST_SENDD,\r\n  CATALOG_REQUEST_SUCCESSED,\r\n  CATALOG_UPDATE,\r\n} from '../constants';\r\nimport { DEPARTMENT_REQUEST_SUCCESSED } from '../constants';\r\nconst initialState = {\r\n  list: [],\r\n  isRequest: false,\r\n  isLoading: false,\r\n  isUpdate: true,\r\n  department: null,\r\n};\r\n\r\nexport const categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CATALOG_REQUEST_SENDD:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isRequest: true,\r\n      };\r\n    case CATALOG_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        list: action.data,\r\n        isLoading: true,\r\n        isRequest: false,\r\n        isUpdate: false,\r\n      };\r\n    case DEPARTMENT_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        department: action.data,\r\n      };\r\n    case CATALOG_UPDATE:\r\n      return {\r\n        ...state,\r\n        isUpdate: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  INCIDENT_REQUEST_SENDD,\r\n  INCIDENT_REQUEST_SUCCESSED,\r\n  MY_INCIDENT_REQUEST_SUCCESSED,\r\n  INCIDENT_CREATE,\r\n  INCIDENT_CHOOSE,\r\n  INCIDENT_HISTORY_REQUEST_SUCCESSED,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  myList: [],\r\n  history: [],\r\n  current: {\r\n    incident: null,\r\n    isChange: false,\r\n  },\r\n  isRequest: false,\r\n  isLoading: false,\r\n  isUpdate: true,\r\n};\r\n\r\nexport const incidentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCIDENT_REQUEST_SENDD:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isRequest: true,\r\n      };\r\n    case INCIDENT_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        list: action.data,\r\n        isLoading: true,\r\n        isUpdate: false,\r\n        isRequest: false,\r\n      };\r\n    case MY_INCIDENT_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        myList: action.data,\r\n        isLoading: true,\r\n        isRequest: false,\r\n        isUpdate: false,\r\n      };\r\n\r\n    case INCIDENT_HISTORY_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        history: action.data,\r\n        isLoading: true,\r\n        isRequest: false,\r\n        isUpdate: false,\r\n      };\r\n    case INCIDENT_CREATE:\r\n      return {\r\n        ...state,\r\n        isUpdate: true,\r\n      };\r\n    case INCIDENT_CHOOSE:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          incident: action.incident,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { STATUS_REQUEST_SUCCESSED, STATUS_UPDATE } from '../constants';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  isUpdate: true,\r\n};\r\n\r\nexport const statusReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case STATUS_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        list: action.data,\r\n        isUpdate: false,\r\n      };\r\n    case STATUS_UPDATE:\r\n      return {\r\n        ...state,\r\n        isUpdate: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { POSITIONS_REQUEST_SUCCESSED, POSITIONS_UPDATE } from '../constants';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  isUpdate: true,\r\n};\r\n\r\nexport const positionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POSITIONS_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        list: action.data,\r\n        isUpdate: false,\r\n      };\r\n    case POSITIONS_UPDATE:\r\n      return {\r\n        ...state,\r\n        isUpdate: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { USERS_REQUEST_SUCCESSED, USERS_UPDATE } from '../constants';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  isUpdate: true,\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_REQUEST_SUCCESSED:\r\n      return {\r\n        ...state,\r\n        list: action.data,\r\n        isUpdate: false,\r\n      };\r\n    case USERS_UPDATE:\r\n      return {\r\n        ...state,\r\n        isUpdate: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { categoryReducer } from './categoryReducer';\r\nimport { incidentReducer } from './incidentReducer';\r\nimport { statusReducer } from './statusReducer';\r\nimport { positionReducer } from './positionReducer';\r\nimport { usersReducer } from './usersReducer';\r\n\r\nexport const CombineReducers = combineReducers({\r\n  auth: authReducer,\r\n  catalog: categoryReducer,\r\n  incidents: incidentReducer,\r\n  status: statusReducer,\r\n  positions: positionReducer,\r\n  users: usersReducer,\r\n});\r\n","import {\r\n  AUTH_FETCHING,\r\n  AUTH_REQUEST_SENDD,\r\n  AUTH_REQUEST_SUCCESSED,\r\n  START_REQUEST_SUCCESSED,\r\n} from '../constants';\r\n\r\nexport const authFetching = (ip) => ({ type: AUTH_FETCHING, ip });\r\nexport const authRequestSendd = () => ({ type: AUTH_REQUEST_SENDD });\r\nexport const authRequestSuccessed = (data) => ({\r\n  type: AUTH_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\nexport const startRequestSuccessed = (data) => ({\r\n  type: START_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\n","import {\r\n  CATALOG_FETCHING,\r\n  CATALOG_REQUEST_SENDD,\r\n  CATALOG_REQUEST_SUCCESSED,\r\n  CATALOG_POST,\r\n  CATALOG_UPDATE,\r\n} from '../constants';\r\n\r\nexport const categoryUpdate = () => ({ type: CATALOG_UPDATE });\r\nexport const categoryFetching = () => ({\r\n  type: CATALOG_FETCHING,\r\n});\r\nexport const categoryRequestSendd = () => ({\r\n  type: CATALOG_REQUEST_SENDD,\r\n});\r\nexport const categoryRequestSuccessed = (data) => ({\r\n  type: CATALOG_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\nexport const catalogPost = (route, method, data, id) => ({\r\n  type: CATALOG_POST,\r\n  method,\r\n  route,\r\n  data,\r\n  id,\r\n});\r\n","import {\r\n  INCIDENT_FETCHING,\r\n  INCIDENT_REQUEST_SENDD,\r\n  INCIDENT_REQUEST_SUCCESSED,\r\n  MY_INCIDENT_REQUEST_SUCCESSED,\r\n  INCIDENT_CHOOSE,\r\n  INCIDENT_CREATE,\r\n  INCIDENT_HISTORY_REQUEST_SUCCESSED,\r\n} from '../constants';\r\n\r\nexport const incidentFetching = (\r\n  method = 'get',\r\n  data,\r\n  id,\r\n  route = 'incidents',\r\n) => ({\r\n  type: INCIDENT_FETCHING,\r\n  route,\r\n  method,\r\n  data,\r\n  id,\r\n});\r\nexport const incidentRequestSendd = () => ({\r\n  type: INCIDENT_REQUEST_SENDD,\r\n});\r\nexport const incidentRequestSuccessed = (data) => ({\r\n  type: INCIDENT_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\nexport const myIncidentRequestSuccessed = (data) => ({\r\n  type: MY_INCIDENT_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\nexport const incidentHistoryRequestSuccessed = (data) => ({\r\n  type: INCIDENT_HISTORY_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\nexport const incidentCreate = () => ({ type: INCIDENT_CREATE });\r\nexport const incidentChoose = (incident) => ({\r\n  type: INCIDENT_CHOOSE,\r\n  incident,\r\n});\r\n","import { put, call, takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport * as axios from 'axios';\r\nimport {\r\n  AUTH_FETCHING,\r\n  CATALOG_FETCHING,\r\n  CATALOG_POST,\r\n  INCIDENT_FETCHING,\r\n  QUERY_API,\r\n} from './constants';\r\nimport {\r\n  authRequestSendd,\r\n  authRequestSuccessed,\r\n} from './actionCreators/authAction';\r\nimport {\r\n  categoryFetching,\r\n  categoryRequestSendd,\r\n  categoryRequestSuccessed,\r\n} from './actionCreators/catalogAction';\r\nimport {\r\n  incidentRequestSendd,\r\n  incidentRequestSuccessed,\r\n  incidentCreate,\r\n} from './actionCreators/incidentAction';\r\n\r\nexport function* watchFetch() {\r\n  yield takeLatest(AUTH_FETCHING, fetchAsync);\r\n  yield takeLatest(CATALOG_FETCHING, fetchAsyncCatalog);\r\n  yield takeEvery(CATALOG_POST, catalogPost);\r\n  yield takeEvery(QUERY_API, queryApiAsync);\r\n  yield takeEvery(INCIDENT_FETCHING, fetchAsyncIncident);\r\n}\r\n\r\nfunction* queryApiAsync({\r\n  route,\r\n  actionSuccessed,\r\n  actionUpdate,\r\n  method,\r\n  data = {},\r\n  id,\r\n  params,\r\n}) {\r\n  try {\r\n    // yield put(authRequestSendd());\r\n    let response;\r\n    if (params) {\r\n      Object.assign(data, { params });\r\n    }\r\n    // console.group(route);\r\n    // console.dir('actionSuccessed', actionSuccessed);\r\n    // console.dir('actionUpdate', actionUpdate);\r\n    // console.log('method', method);\r\n    // console.log('data', data);\r\n    // console.log('id', id);\r\n    // console.log('params', params);\r\n    // console.groupEnd();\r\n    switch (method) {\r\n      case 'post':\r\n        response = yield call(() =>\r\n          axios.post(`http://192.168.214.106:8080/api/${route}`, data),\r\n        );\r\n        if (!!actionUpdate) {\r\n          yield put(actionUpdate());\r\n        }\r\n        break;\r\n      case 'delete':\r\n        response = yield call(() =>\r\n          axios.delete(`http://192.168.214.106:8080/api/${route}/${id}`, data),\r\n        );\r\n        if (!!actionUpdate) {\r\n          yield put(actionUpdate());\r\n        }\r\n        break;\r\n      case 'put':\r\n        response = yield call(() =>\r\n          axios.put(`http://192.168.214.106:8080/api/${route}/${id}`, data),\r\n        );\r\n        if (!!actionUpdate) {\r\n          yield put(actionUpdate());\r\n        }\r\n        break;\r\n      default:\r\n        response = yield call(() =>\r\n          axios.get(`http://192.168.214.106:8080/api/${route}/`, data),\r\n        );\r\n        // console.log(`http://192.168.214.106:8080/api/${route}/`, data);\r\n        if (!!actionUpdate) {\r\n          yield put(actionUpdate());\r\n        }\r\n        break;\r\n    }\r\n    if (!!actionSuccessed) {\r\n      yield put(actionSuccessed(response.data));\r\n    }\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nfunction* fetchAsync({ ip }) {\r\n  try {\r\n    yield put(authRequestSendd());\r\n    const response = yield call(() =>\r\n      axios.get(`http://192.168.214.106:8080/api/auth/?ip=${ip}`),\r\n    );\r\n    yield put(authRequestSuccessed(response.data[0]));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nfunction* fetchAsyncCatalog() {\r\n  try {\r\n    yield put(categoryRequestSendd());\r\n    const response = yield call(() =>\r\n      axios.get(`http://192.168.214.106:8080/api/categories`),\r\n    );\r\n    yield put(categoryRequestSuccessed(response.data));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\nfunction* fetchAsyncIncident({ route, method, data, id }) {\r\n  try {\r\n    yield put(incidentRequestSendd());\r\n    switch (method) {\r\n      case 'post':\r\n        yield call(() =>\r\n          axios.post(`http://192.168.214.106:8080/api/${route}`, data),\r\n        );\r\n        yield put(incidentCreate());\r\n        break;\r\n      case 'delete':\r\n        yield call(() =>\r\n          axios.delete(`http://192.168.214.106:8080/api/${route}/${id}`, data),\r\n        );\r\n        yield put(incidentCreate());\r\n        break;\r\n      case 'put':\r\n        yield call(() =>\r\n          axios.put(`http://192.168.214.106:8080/api/${route}/${id}`, data),\r\n        );\r\n        yield put(incidentCreate());\r\n        break;\r\n      case 'get':\r\n        const response = yield call(() =>\r\n          axios.get(`http://192.168.214.106:8080/api/incidents`),\r\n        );\r\n        yield put(incidentRequestSuccessed(response.data));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\nfunction* catalogPost({ route, method, data, id }) {\r\n  try {\r\n    yield put(authRequestSendd());\r\n    switch (method) {\r\n      case 'post':\r\n        yield call(() =>\r\n          axios.post(`http://192.168.214.106:8080/api/${route}`, data),\r\n        );\r\n        break;\r\n      case 'delete':\r\n        yield call(() =>\r\n          axios.delete(`http://192.168.214.106:8080/api/${route}/${id}`, data),\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    yield put(categoryFetching());\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { CombineReducers } from './reducer';\r\nimport { watchFetch } from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(CombineReducers, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(watchFetch);\r\n\r\nexport default store;\r\n","import {\r\n  DEPARTMENT_FETCHING,\r\n  DEPARTMENT_REQUEST_SENDD,\r\n  DEPARTMENT_REQUEST_SUCCESSED,\r\n} from '../constants';\r\n\r\nexport const departmentFetching = () => ({\r\n  type: DEPARTMENT_FETCHING,\r\n});\r\nexport const departmentRequestSendd = () => ({\r\n  type: DEPARTMENT_REQUEST_SENDD,\r\n});\r\nexport const departmentRequestSuccessed = (data) => ({\r\n  type: DEPARTMENT_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\n","import { STATUS_REQUEST_SUCCESSED, STATUS_UPDATE } from '../constants';\r\n\r\nexport const statusUpdate = () => ({ type: STATUS_UPDATE });\r\nexport const statusRequestSeccessed = (data) => ({\r\n  type: STATUS_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport styles from './siderbar.module.css';\r\n//Interface TypeScript for function Sidebar\r\nimport { ISidebar } from './interface';\r\n\r\n//? Font Awesome иконки\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faAngleRight,\r\n  faTag,\r\n  faUserClock,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Sidebar: React.FC<ISidebar> = ({ list, onClick, activeId }) => {\r\n  const tags = (item: any, color?: any) => {\r\n    let tags = [];\r\n    if (!!item.status || Number(item.status) === 0) {\r\n      tags.push(\r\n        <FontAwesomeIcon\r\n          key={item.id + 't'}\r\n          icon={faTag}\r\n          color={color}\r\n          className={'mb-1'}\r\n        />,\r\n      );\r\n      if (!!item.responsible && Number(item.status) === 0) {\r\n        tags.push(\r\n          <FontAwesomeIcon\r\n            key={item.id + 'c'}\r\n            icon={faUserClock}\r\n            color={'#007bff'}\r\n          />,\r\n        );\r\n      }\r\n    }\r\n\r\n    return tags;\r\n  };\r\n\r\n  const [jsxListItem, setJsxListItem] = useState<\r\n    JSX.Element[] | JSX.Element | void[]\r\n  >([<p key={0}>Загрузка данных</p>]);\r\n  useEffect(() => {\r\n    if (Array.isArray(list) && list.length) {\r\n      const jsxItem: JSX.Element[] | void[] = list.map((item: any) => {\r\n        let itemText: string = '';\r\n        if (item.createdAt) {\r\n          itemText = ` №${item.id} `;\r\n        }\r\n        let color;\r\n        if (item.status) {\r\n          if (Number(item.status) === 8388608) {\r\n            color = '#c3e6cb';\r\n          } else {\r\n            color = '#bee5eb';\r\n          }\r\n        } else if (item.status === 0) {\r\n          color = '#007bff';\r\n        }\r\n        return (\r\n          <ListGroup.Item\r\n            key={item.id}\r\n            //@ts-ignore\r\n            onClick={onClick ? () => onClick(item.id) : null}\r\n            className={`${styles.item} ${\r\n              activeId === item.id ? styles.active : null\r\n            }`}\r\n          >\r\n            <div className={`${styles.icon} ${styles.icon_left}`}>\r\n              {tags(item, color)?.map((item) => item)}\r\n            </div>\r\n            <div className={styles.item__body}>\r\n              <div className={styles.item__id}>\r\n                <span>{itemText}</span>\r\n              </div>\r\n              <div className={styles.item__text}>\r\n                <span className={styles.item__text_span}>\r\n                  {item.name ? item.name : 'N/A'} {item.responsible}\r\n                </span>\r\n              </div>\r\n              <div className={styles.item__date}>\r\n                {item.createdAt ? (\r\n                  <Moment locale=\"ru\" format=\"DD.MM.YY\">\r\n                    {item.createdAt}\r\n                  </Moment>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.icon} ${styles.icon_right}`}>\r\n              <FontAwesomeIcon icon={faAngleRight} />\r\n            </div>\r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n\r\n      setJsxListItem(jsxItem);\r\n    }\r\n  }, [list, activeId, onClick]);\r\n\r\n  return <ListGroup variant=\"flush\">{jsxListItem}</ListGroup>;\r\n};\r\n\r\nexport default memo(Sidebar);\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { ISidebarHistory } from './interface';\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport styles from './sidebarHistory.module.css';\r\nimport Sidebar from './Sidebar';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst SidebarHistory: React.FC<ISidebarHistory> = ({\r\n  onClick,\r\n  activeId,\r\n  onClickHistory,\r\n}) => {\r\n  const history = useSelector(\r\n    (state: any) => state.incidents.history,\r\n    shallowEqual,\r\n  );\r\n  const [isLoadHistory, setIsLoadHistory] = useState(false);\r\n  useEffect(() => {\r\n    if (isLoadHistory) {\r\n      onClickHistory();\r\n    }\r\n  }, [isLoadHistory, onClickHistory]);\r\n\r\n  const [sidebarList, setSidebarList] = useState([]);\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    setSidebarList(\r\n      history.map((item: any) => {\r\n        let responsible;\r\n        if (item.responsibleUser) {\r\n          responsible = `(${\r\n            item.responsibleUser.name1\r\n          } ${item.responsibleUser.name2.charAt(\r\n            0,\r\n          )}. ${item.responsibleUser.name3.charAt(0)}.)`;\r\n        } else {\r\n          responsible = '';\r\n        }\r\n        const newItem = {\r\n          id: item.id,\r\n          name: `${item.category ? item.category.name : ''} ${\r\n            item.property ? item.property.name : ''\r\n          } ${item.option ? item.option.name : ''}`,\r\n          createdAt: item.createdAt,\r\n          responsible,\r\n          status: item.statusId,\r\n        };\r\n        return newItem;\r\n      }),\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [history]);\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey=\"1\" className={styles.accordion}>\r\n        <Card className={styles.item}>\r\n          <Accordion.Toggle\r\n            as={Button}\r\n            eventKey=\"0\"\r\n            variant={'light'}\r\n            onClick={() => {\r\n              setIsLoadHistory(true);\r\n            }}\r\n          >\r\n            Показать историю\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className={styles.body}>\r\n              {Array.isArray(sidebarList) && sidebarList.length ? (\r\n                <Sidebar\r\n                  list={sidebarList}\r\n                  onClick={onClick}\r\n                  activeId={activeId}\r\n                />\r\n              ) : null}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\nexport default memo(SidebarHistory);\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { ISidebarWrapper } from './interface';\r\nimport { Container } from 'react-bootstrap';\r\nimport SidebarHistory from './SidebarHistory';\r\nimport styles from './sidebarWrapper.module.css';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst SidebarWrapper: React.FC<ISidebarWrapper> = ({\r\n  title,\r\n  list,\r\n  onClick,\r\n  activeId,\r\n  onClickHistory,\r\n}) => {\r\n  const [blogTitle, setBlogTitle] = useState<JSX.Element | null>(null);\r\n  useEffect(() => {\r\n    if (title) {\r\n      const newBlogTitle = <h3>{title}</h3>;\r\n      setBlogTitle(newBlogTitle);\r\n    }\r\n  }, [title, list]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        {blogTitle}\r\n        <div className={styles.block}>\r\n          {Array.isArray(list) && list.length ? (\r\n            <Sidebar list={list} onClick={onClick} activeId={activeId} />\r\n          ) : null}\r\n          <SidebarHistory\r\n            onClick={onClick}\r\n            activeId={activeId}\r\n            onClickHistory={onClickHistory}\r\n          />\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default memo(SidebarWrapper);\r\n","import React, { memo } from 'react';\r\nimport { IModalWindow } from './interface';\r\n\r\n//Bootstrap\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nconst ModalWindow: React.FC<IModalWindow> = ({\r\n  title,\r\n  children,\r\n  show,\r\n  onSubmit,\r\n  onOk,\r\n  onHide,\r\n  textOk,\r\n  textNot,\r\n  validated,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={show}\r\n        onHide={onHide}\r\n      >\r\n        {!!title ? (\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{title}</Modal.Title>\r\n          </Modal.Header>\r\n        ) : null}\r\n\r\n        <Form noValidate validated={validated} onSubmit={onSubmit || undefined}>\r\n          {!!children ? <Modal.Body>{children}</Modal.Body> : undefined}\r\n\r\n          {!!textOk || !!textNot ? (\r\n            <Modal.Footer>\r\n              {!!textNot ? (\r\n                <Button variant=\"secondary\" onClick={onHide || undefined}>\r\n                  {textNot}\r\n                </Button>\r\n              ) : null}\r\n              {!!textOk ? (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={!onSubmit ? onOk : undefined}\r\n                  type={!!onSubmit ? 'submit' : 'button'}\r\n                >\r\n                  {textOk}\r\n                </Button>\r\n              ) : null}\r\n            </Modal.Footer>\r\n          ) : null}\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default memo(ModalWindow);\r\n","import React, { memo, useState } from 'react';\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\nimport { incidentCreate } from '../../redux/actionCreators/incidentAction';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst IncidentHandleStatus = ({ show, onHide, incident }) => {\r\n  const dispatch = useDispatch();\r\n  const { list } = useSelector((state) => state.status, shallowEqual);\r\n  const { user } = useSelector((state) => state.auth, shallowEqual);\r\n  const [fullName] = useState(`${user.name1} ${user.name2} ${user.name3}`);\r\n  const [validated, setValidated] = useState(false);\r\n  const [newStatus, setNewStatus] = useState({ statusId: incident.statusId });\r\n  const [newComment, setNewComment] = useState();\r\n\r\n  const handleStatus = (event) => {\r\n    setNewStatus({ statusId: Number(event.target.value) });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const form = event.currentTarget;\r\n    const fnNewComment = (text) => {\r\n      const data = {\r\n        text,\r\n        userNumber: user.number,\r\n        incidentId: incident.id,\r\n      };\r\n      dispatch(\r\n        queryApi({\r\n          route: 'comments',\r\n          method: 'post',\r\n          actionUpdate: incidentCreate,\r\n          data,\r\n          id: incident.id,\r\n        }),\r\n      );\r\n    };\r\n    if (form.checkValidity()) {\r\n      if (newStatus.statusId !== incident.statusId) {\r\n        fnNewComment(\r\n          `${fullName} изменил статус на \"${\r\n            list.find((item) => item.id === newStatus.statusId).name\r\n          }\"`,\r\n        );\r\n      }\r\n      fnNewComment(newComment);\r\n\r\n      dispatch(\r\n        queryApi({\r\n          route: 'incidents',\r\n          method: 'put',\r\n          actionUpdate: incidentCreate,\r\n          data: newStatus,\r\n          id: incident.id,\r\n        }),\r\n      );\r\n      onHide();\r\n    }\r\n    setValidated(true);\r\n  };\r\n  if (list.length) {\r\n    return (\r\n      <ModalWindow\r\n        show={show}\r\n        title={'Изменение инцидента'}\r\n        onHide={onHide}\r\n        textOk={'Сохранить'}\r\n        onSubmit={handleSubmit}\r\n        validated={validated}\r\n      >\r\n        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n          <Form.Label>Изменить статус</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            defaultValue={list.find((item) => item.id === incident.statusId).id}\r\n            onChange={handleStatus}\r\n          >\r\n            {list\r\n              .sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                  return -1;\r\n                } else {\r\n                  return 1;\r\n                }\r\n              })\r\n              .map((item) => (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Комментарий</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            required\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Обязательно нужно указать комментарий!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </ModalWindow>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default memo(IncidentHandleStatus);\r\n","import { USERS_REQUEST_SUCCESSED, USERS_UPDATE } from '../constants';\r\n\r\nexport const usersUpdate = () => ({ type: USERS_UPDATE });\r\nexport const usersRequestSeccessed = (data) => ({\r\n  type: USERS_REQUEST_SUCCESSED,\r\n  data,\r\n});\r\n","import React, { memo, useLayoutEffect, useState, useEffect } from 'react';\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\nimport { IIncidentHandleResponsible, IUser } from './interface';\r\nimport { Form } from 'react-bootstrap';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\nimport { usersRequestSeccessed } from '../../redux/actionCreators/usersAction';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport styles from './styles.module.css';\r\n\r\nconst IncidentHandleResponsible: React.FC<IIncidentHandleResponsible> = ({\r\n  show,\r\n  onHide,\r\n  onClick,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state: any) => state.users.list, shallowEqual);\r\n  const user = useSelector((state: any) => state.auth.user, shallowEqual);\r\n  const { incident } = useSelector(\r\n    (state: any) => state.incidents.current,\r\n    shallowEqual,\r\n  );\r\n\r\n  const [filterList, setFilterList] = useState<IUser[]>([]);\r\n  useLayoutEffect(() => {\r\n    if (!!list) {\r\n      setFilterList(\r\n        list.filter(\r\n          (item: any) =>\r\n            Number(item.number) !== Number(incident.currentResponsible),\r\n        ),\r\n      );\r\n    }\r\n  }, [list, incident.currentResponsible]);\r\n  const [currentResponsible, setCurrentResponsible] = useState<number>();\r\n  useLayoutEffect(() => {\r\n    if (filterList[0]) {\r\n      setCurrentResponsible(filterList[0].number);\r\n    }\r\n  }, [filterList]);\r\n  const [currentResponsibleFullname, setCurrentResponsibleFullname] = useState(\r\n    '',\r\n  );\r\n  useEffect(() => {\r\n    let currentUser = list.find(\r\n      (item: any) => Number(item.number) === Number(currentResponsible),\r\n    );\r\n    if (currentUser) {\r\n      setCurrentResponsibleFullname(\r\n        `${currentUser.name1} ${currentUser.name2.charAt(\r\n          0,\r\n        )}. ${currentUser.name3.charAt(0)}.`,\r\n      );\r\n    }\r\n    if (!!list.length) {\r\n      if (!!list.number) {\r\n        setCurrentResponsible(\r\n          list.filter(\r\n            (item: any) =>\r\n              Number(item.number) !== Number(incident.currentResponsible),\r\n          )[0].number,\r\n        );\r\n      }\r\n    }\r\n  }, [currentResponsible, list, incident.currentResponsible]);\r\n  useLayoutEffect(() => {\r\n    dispatch(\r\n      queryApi({\r\n        route: 'users',\r\n        actionSuccessed: usersRequestSeccessed,\r\n        params: { departmentId: user.departmentId },\r\n      }),\r\n    );\r\n  }, [dispatch, user.departmentId]);\r\n  if (list.length > 1) {\r\n    return (\r\n      <ModalWindow\r\n        title={`Изменение ответственного для инцидента №${incident.id}`}\r\n        show={show}\r\n        onHide={onHide}\r\n        textOk={'Сохранить'}\r\n        onOk={() => {\r\n          onHide();\r\n          onClick.call(null, {\r\n            bodyData: { currentResponsible },\r\n            comment: `Статус инцидента изменен на \"В работе\". Ответственным назначен: ${currentResponsibleFullname}`,\r\n          });\r\n        }}\r\n      >\r\n        <>\r\n          <Form.Group>\r\n            <Form.Label>Список ответственных</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              defaultValue={filterList[0] ? filterList[0].number : 0}\r\n              onChange={(event: any) => {\r\n                setCurrentResponsible(event.target.value);\r\n              }}\r\n              className={styles.select}\r\n            >\r\n              {filterList.map((item: any) => (\r\n                <option value={item.number} key={item.number}>{`${\r\n                  item.name1\r\n                } ${item.name2.charAt(0)}. ${item.name3.charAt(0)}.`}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </>\r\n      </ModalWindow>\r\n    );\r\n  } else {\r\n    return (\r\n      <ModalWindow\r\n        title={'В отделе нет других сотрудников'}\r\n        onHide={onHide}\r\n        show={show}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default memo(IncidentHandleResponsible);\r\n","import React, { memo, useState, useLayoutEffect, useEffect } from 'react';\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\nimport {\r\n  IIncidentHandleDepartment,\r\n  ICategory,\r\n  IOption,\r\n  IDepartment,\r\n  IProperty,\r\n} from './interface';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst IncidentHandleDepartment = ({\r\n  show,\r\n  onClick,\r\n  onHide,\r\n}: IIncidentHandleDepartment) => {\r\n  const catalog = useSelector((state: any) => state.catalog, shallowEqual);\r\n  const user = useSelector((state: any) => state.auth.user, shallowEqual);\r\n  useLayoutEffect(() => {}, [catalog]);\r\n\r\n  //**Получение листа отделов */\r\n  const [currentDepartmentId, setCurrentDepartmentId] = useState(null);\r\n  const [departmentList, setDepartmentList] = useState<IDepartment[]>([]);\r\n  useLayoutEffect(() => {\r\n    if (!!catalog && !!user) {\r\n      if (!!catalog.department) {\r\n        let department = catalog.department.filter(\r\n          (item: any) => item.id !== user.departmentId,\r\n        );\r\n        setDepartmentList(department);\r\n        setCurrentDepartmentId(department[0].id);\r\n      }\r\n    }\r\n  }, [catalog, user]);\r\n\r\n  //**Получение листа категорий */\r\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\r\n  const [categoryList, setCategoryList] = useState<ICategory[]>([]);\r\n  useEffect(() => {\r\n    let category = catalog.list.filter(\r\n      (item: any) => Number(item.departmentId) === Number(currentDepartmentId),\r\n    );\r\n    if (!!category.length) {\r\n      setCategoryList(category);\r\n      setCurrentCategoryId(category[0].id);\r\n    } else {\r\n      setCategoryList([]);\r\n      setCurrentCategoryId(null);\r\n    }\r\n  }, [currentDepartmentId, catalog.list]);\r\n\r\n  //**Получение листа параметров и опций*/\r\n  // Параметры\r\n  const [currentPropertyId, setCurrentPropertyId] = useState<number | null>(\r\n    null,\r\n  );\r\n  const [propertyList, setPropertyList] = useState<IProperty[]>([]);\r\n\r\n  // Опции\r\n  const [currentOptionId, setCurrentOptionId] = useState<number | null>(null);\r\n  const [optionList, setOptionList] = useState<IOption[]>([]);\r\n  useEffect(() => {\r\n    if (!!categoryList) {\r\n      let currentCategory = categoryList.find(\r\n        (item: any) => Number(item.id) === Number(currentCategoryId),\r\n      );\r\n\r\n      if (!!currentCategory) {\r\n        if (!!currentCategory.properties.length) {\r\n          setPropertyList(currentCategory.properties);\r\n          setCurrentPropertyId(currentCategory.properties[0].id);\r\n        } else {\r\n          setPropertyList([]);\r\n          setCurrentPropertyId(null);\r\n        }\r\n\r\n        if (!!currentCategory.options.length) {\r\n          setOptionList(currentCategory.options);\r\n          setCurrentOptionId(currentCategory.options[0].id);\r\n        } else {\r\n          setOptionList([]);\r\n          setCurrentOptionId(null);\r\n        }\r\n      }\r\n    }\r\n  }, [currentCategoryId, categoryList]);\r\n\r\n  /**Вывод всех выдранных категорий */\r\n  // console.group('currentID');\r\n  // console.log('currentDepartmentId', currentDepartmentId);\r\n  // console.log('currentCategoryId', currentCategoryId);\r\n  // console.log('currentPropertyId', currentPropertyId);\r\n  // console.log('currentOptionId', currentOptionId);\r\n  // console.groupEnd();\r\n  const jsxSelector = (\r\n    title: string,\r\n    defaultValue: number | null,\r\n    setId: (val: any) => void,\r\n    list: any,\r\n  ) => {\r\n    return (\r\n      <>\r\n        <Form.Group>\r\n          <Form.Label>{title}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            defaultValue={defaultValue}\r\n            onChange={(event: any) => {\r\n              setId(event.target.value);\r\n            }}\r\n          >\r\n            {list\r\n              .sort((a: any, b: any) => {\r\n                if (b.name < a.name) {\r\n                  return 1;\r\n                } else {\r\n                  return -1;\r\n                }\r\n              })\r\n              .map((item: any) => (\r\n                <option value={item.id} key={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <ModalWindow\r\n      title={'Передать инцидент'}\r\n      show={show}\r\n      onHide={onHide}\r\n      onOk={() => {\r\n        onClick.call(null, {\r\n          comment: `${user.name1} ${user.name2.charAt(0)} ${user.name3.charAt(\r\n            0,\r\n          )} передал инцидент в \"${\r\n            departmentList.find(\r\n              (item: any) => Number(item.id) === Number(currentDepartmentId),\r\n            )?.name\r\n          }\"`,\r\n          bodyData: {\r\n            categoryId: currentCategoryId,\r\n            propertyId: currentPropertyId,\r\n            optionId: currentOptionId,\r\n            currentResponsible: null,\r\n          },\r\n        });\r\n      }}\r\n      textOk={'Передать'}\r\n    >\r\n      <>\r\n        {!!departmentList.length\r\n          ? jsxSelector(\r\n              'Отделы',\r\n              currentDepartmentId,\r\n              setCurrentDepartmentId,\r\n              departmentList,\r\n            )\r\n          : undefined}\r\n\r\n        {!!categoryList.length\r\n          ? jsxSelector(\r\n              'Категории',\r\n              currentCategoryId,\r\n              setCurrentCategoryId,\r\n              categoryList,\r\n            )\r\n          : undefined}\r\n\r\n        {!!propertyList.length\r\n          ? jsxSelector(\r\n              'Параметры',\r\n              currentPropertyId,\r\n              setCurrentPropertyId,\r\n              propertyList,\r\n            )\r\n          : undefined}\r\n        {!!optionList.length\r\n          ? jsxSelector(\r\n              'Опции',\r\n              currentOptionId,\r\n              setCurrentOptionId,\r\n              optionList,\r\n            )\r\n          : undefined}\r\n      </>\r\n    </ModalWindow>\r\n  );\r\n};\r\n\r\nexport default memo(IncidentHandleDepartment);\r\n","import React, { memo, useState, useLayoutEffect, useMemo } from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport SetResponsible from '../IncidentHandleResponsible/IncidentHandleResponsible';\r\nimport styles from './styles.module.css';\r\nimport IncidentHandleDepartment from '../IncidentHandleDepartment/IncidentHandleDepartment';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\n\r\nexport default memo(function IncidentWorkButton({ onClick, handleOpenModal }) {\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  const [fullName, setFullName] = useState('');\r\n  useLayoutEffect(() => {\r\n    setFullName(`${user.name1} ${user.name2} ${user.name3}`);\r\n  }, [user]);\r\n  const [showHanldeResponsible, SetShowHanldeResponsible] = useState(false);\r\n  const handleShowResponsible = () => {\r\n    SetShowHanldeResponsible(true);\r\n  };\r\n  function handleCloseResponsible() {\r\n    SetShowHanldeResponsible(false);\r\n  }\r\n\r\n  const [showHandleDepartment, setShowHandleDepartment] = useState(false);\r\n  const handleShowDepartment = () => {\r\n    setShowHandleDepartment(true);\r\n  };\r\n  const handleCloseDepartment = () => {\r\n    setShowHandleDepartment(false);\r\n  };\r\n\r\n  const currentIncident = useSelector(\r\n    (state) => state.incidents.current.incident,\r\n    shallowEqual,\r\n  );\r\n  useLayoutEffect(() => {\r\n    // console.log('currentIncident', currentIncident);\r\n  }, [currentIncident]);\r\n  const handleInWork = useMemo(() => {\r\n    let { category, property, option } = currentIncident;\r\n    if (category || property || option) {\r\n      if (category.level) {\r\n        return onClick.bind(null, {\r\n          bodyData: { currentResponsible: user.number },\r\n          comment: `${fullName} назначил себя ответственный. Ожидает согласования.`,\r\n          isConsent: true,\r\n        });\r\n      } else {\r\n        return onClick.bind(null, {\r\n          bodyData: { currentResponsible: user.number },\r\n          comment: `Статус инцидента изменен на \"В работе\". Ответственным назначен: ${fullName}`,\r\n        });\r\n      }\r\n    }\r\n  }, [currentIncident, fullName, onClick, user.number]);\r\n\r\n  const responsibleButton = useMemo(() => {\r\n    if (\r\n      Number(currentIncident.statusId) > 0 &&\r\n      !!currentIncident.currentResponsible\r\n    ) {\r\n      return (\r\n        <>\r\n          <Button variant=\"outline-primary\" onClick={handleOpenModal}>\r\n            Изменить\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      if (!currentIncident.currentResponsible) {\r\n        return (\r\n          <>\r\n            <Button variant=\"outline-success\" onClick={handleInWork}>\r\n              Взять в работу\r\n            </Button>\r\n          </>\r\n        );\r\n      } else {\r\n        if (user.position.level)\r\n          return (\r\n            <>\r\n              <ButtonGroup aria-label=\"Basic example\">\r\n                <Button\r\n                  variant=\"success\"\r\n                  onClick={onClick.bind(null, {\r\n                    comment: `Согласовано`,\r\n                  })}\r\n                >\r\n                  Согласовать\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline-danger\"\r\n                  onClick={onClick.bind(null, {\r\n                    comment: `Отказано`,\r\n                    bodyData: { currentResponsible: null, statusId: 0 },\r\n                  })}\r\n                >\r\n                  Отказать\r\n                </Button>\r\n              </ButtonGroup>\r\n            </>\r\n          );\r\n      }\r\n    }\r\n  }, [\r\n    currentIncident,\r\n    handleInWork,\r\n    handleOpenModal,\r\n    onClick,\r\n    user.position.level,\r\n  ]);\r\n  return (\r\n    <>\r\n      <hr />\r\n      <div className={styles.bar}>\r\n        <div>\r\n          {user.position.level ? (\r\n            <>\r\n              <Button\r\n                variant={'outline-secondary'}\r\n                size=\"sm\"\r\n                onClick={handleShowResponsible}\r\n                className={'m-1'}\r\n              >\r\n                Назначить ответственного\r\n              </Button>\r\n              {showHanldeResponsible ? (\r\n                <SetResponsible\r\n                  show={showHanldeResponsible}\r\n                  onHide={handleCloseResponsible}\r\n                  onClick={onClick}\r\n                />\r\n              ) : undefined}\r\n            </>\r\n          ) : null}\r\n\r\n          <Button\r\n            variant={'outline-secondary'}\r\n            size=\"sm\"\r\n            className={'m-1'}\r\n            onClick={handleShowDepartment}\r\n          >\r\n            Передать в другой отдел\r\n          </Button>\r\n          {showHandleDepartment ? (\r\n            <IncidentHandleDepartment\r\n              show={showHandleDepartment}\r\n              onHide={handleCloseDepartment}\r\n              onClick={onClick}\r\n            />\r\n          ) : undefined}\r\n        </div>\r\n        {responsibleButton}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n","import React, { memo } from 'react';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport { IIncidentInWork } from './interface';\r\n\r\nconst IncidentInWork: React.FC<IIncidentInWork> = ({\r\n  startWork,\r\n  nameResponsible,\r\n}) => {\r\n  return (\r\n    <>\r\n      <small>\r\n        {`${nameResponsible} принял(а) в работу ${\r\n          !startWork ? `(на согласовании)` : ''\r\n        }`}\r\n        {!!startWork ? (\r\n          <Moment locale=\"ru\" fromNow>\r\n            {startWork}\r\n          </Moment>\r\n        ) : undefined}\r\n      </small>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(IncidentInWork);\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { IIncidentStatus } from './interface';\r\nimport styles from './styles.module.css';\r\n//Bootstrap\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst IncidentStatus: React.FC<IIncidentStatus> = ({ status }) => {\r\n  const [variant, setVariant] = useState<'info' | 'success'>('info');\r\n  useEffect(() => {\r\n    if (status === 8388608) {\r\n      setVariant('success');\r\n    } else {\r\n      setVariant('info');\r\n    }\r\n  }, [status]);\r\n  const { list } = useSelector((state: any) => state.status);\r\n  if (status && list.length)\r\n    return (\r\n      <>\r\n        <Button variant={variant} disabled size=\"sm\" className={styles.item}>\r\n          {list.find((item: any) => item.id === status).name}\r\n        </Button>\r\n      </>\r\n    );\r\n  else return <></>;\r\n};\r\n\r\nexport default memo(IncidentStatus);\r\n","import React, { memo } from 'react';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nimport IncidentInWork from '../IncidentInWork/IncidentInWork';\r\nimport IncidentStatus from '../IncidentStatus/IncidentStatus';\r\n\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst IncidentWindowHeader = ({ incident, myincident }) => {\r\n  return (\r\n    <Card.Header className={styles.header}>\r\n      <div>\r\n        Инцидент №{incident.id}{' '}\r\n        {incident.responsibleUser ? (\r\n          <>\r\n            {'| '}\r\n            <IncidentInWork\r\n              startWork={incident.startWork}\r\n              nameResponsible={`\r\n                ${\r\n                  incident.responsibleUser.name1\r\n                } ${incident.responsibleUser.name2.charAt(\r\n                0,\r\n              )}.${incident.responsibleUser.name3.charAt(0)}.`}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <IncidentStatus\r\n        myincident={myincident | undefined}\r\n        status={incident.statusId}\r\n      />\r\n    </Card.Header>\r\n  );\r\n};\r\n\r\nexport default memo(IncidentWindowHeader);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport styles from './styles.module.css';\r\nimport 'moment/locale/ru';\r\nimport IncidentModalWrapper from '../IncidentHandleStatus/IncidentHandleStatus';\r\n\r\n//ActionCreator\r\nimport { incidentCreate } from '../../redux/actionCreators/incidentAction';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\n\r\nimport IncidentWorkButton from '../IncidentWorkButton/IncidentWorkButton';\r\n\r\nimport { Container, Card, Accordion, Table } from 'react-bootstrap';\r\n\r\n//? Font Awesome иконки\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport IncidentWindowHeader from '../IncidentWindowHeader/IncidentWindowHeader';\r\n\r\nconst IncidentWindow = ({ incident, myincident }) => {\r\n  //State изменений в инциденте\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth, shallowEqual);\r\n  const onClick = ({ number, comment, bodyData, isConsent }) => {\r\n    const date = new Date();\r\n    const dateNow = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    const incidentData = {\r\n      startWork: dateNow,\r\n      statusId: Number(1),\r\n    };\r\n    if (isConsent) {\r\n      incidentData.startWork = null;\r\n      incidentData.statusId = 0;\r\n    }\r\n    if (!!bodyData) {\r\n      Object.assign(incidentData, bodyData);\r\n    }\r\n    console.log('incidentData', incidentData);\r\n    // dispatch(incidentFetching('put', responsible, incident.id, 'incidents'));\r\n    dispatch(\r\n      queryApi({\r\n        route: 'incidents',\r\n        method: 'put',\r\n        actionUpdate: incidentCreate,\r\n        data: incidentData,\r\n        id: incident.id,\r\n      }),\r\n    );\r\n    const data = {\r\n      text: comment,\r\n      userNumber: user.number,\r\n      incidentId: incident.id,\r\n    };\r\n    dispatch(\r\n      queryApi({\r\n        route: 'comments',\r\n        method: 'post',\r\n        actionUpdate: incidentCreate,\r\n        data,\r\n        id: incident.id,\r\n      }),\r\n    );\r\n  };\r\n  useEffect(() => {}, [incident]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const [accordion, setAccordion] = useState(false);\r\n  if (!!incident) {\r\n    return (\r\n      <>\r\n        {showModal ? (\r\n          <IncidentModalWrapper\r\n            show={showModal}\r\n            onHide={handleCloseModal}\r\n            incident={incident}\r\n          />\r\n        ) : null}\r\n        <Container>\r\n          <Card>\r\n            <IncidentWindowHeader incident={incident} myincident={myincident} />\r\n            <Card.Body className={styles.window}>\r\n              <Card.Title>\r\n                {!!incident.category ? incident.category.name : null}\r\n\r\n                {!!incident.property ? ` / ${incident.property.name}` : null}\r\n\r\n                {!!incident.option ? ` /  ${incident.option.name}` : null}\r\n              </Card.Title>\r\n              <Card.Text></Card.Text>\r\n              <Card.Text>\r\n                Инициатор:{' '}\r\n                {`${incident.initiatorUser.name1 || ''} ${\r\n                  incident.initiatorUser.name2 || ''\r\n                } ${incident.initiatorUser.name3 || ''}`}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                {!!incident.initiatorUser\r\n                  ? `Email: ${incident.initiatorUser.email} `\r\n                  : null}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                {!!incident.initiatorUser\r\n                  ? `Тел.: ${incident.initiatorUser.phone1} `\r\n                  : null}\r\n              </Card.Text>\r\n              {incident.text ? (\r\n                <>\r\n                  <hr />\r\n                  <Card.Text>\r\n                    <pre>{incident.text}</pre>\r\n                  </Card.Text>\r\n                </>\r\n              ) : null}\r\n\r\n              {!myincident ? (\r\n                <IncidentWorkButton\r\n                  incident={incident}\r\n                  handleOpenModal={handleOpenModal}\r\n                  onClick={onClick}\r\n                  user={user}\r\n                />\r\n              ) : null}\r\n              <br />\r\n              <br />\r\n              <Accordion defaultActiveKey=\"1\">\r\n                <Card>\r\n                  <Accordion.Toggle\r\n                    as={Card.Header}\r\n                    eventKey=\"0\"\r\n                    onClick={() => {\r\n                      let boolean = accordion;\r\n                      setAccordion(!boolean);\r\n                    }}\r\n                    className={styles.comment__header}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={accordion ? faAngleDown : faAngleRight}\r\n                    />{' '}\r\n                    Комментарии\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Table striped bordered size=\"sm\" className={styles.table}>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>№</th>\r\n                          <th>Текст</th>\r\n                          <th>Автор</th>\r\n                          <th>Дата</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {incident.comments.map((item, index) => (\r\n                          <tr key={item.id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <pre>{item.text}</pre>\r\n                            </td>\r\n                            <td>{`${item.user.name1} ${item.user.name2.charAt(\r\n                              0,\r\n                            )}. ${item.user.name3.charAt(0)}.`}</td>\r\n                            <td>\r\n                              <Moment\r\n                                locale=\"ru\"\r\n                                format=\"HH:mm D.MM.YYг\"\r\n                                withTitle\r\n                              >\r\n                                {item.createdAt}\r\n                              </Moment>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-right\">\r\n              <small>\r\n                <i>\r\n                  <b>Создан:</b>{' '}\r\n                  <Moment locale=\"ru\" fromNow>\r\n                    {incident.createdAt}\r\n                  </Moment>\r\n                </i>\r\n                {' | '}\r\n                <i>\r\n                  <b>Последнее обновление:</b>{' '}\r\n                  <Moment locale=\"ru\" fromNow>\r\n                    {incident.updatedAt}\r\n                  </Moment>\r\n                </i>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    return <h2>Выберите инцидент</h2>;\r\n  }\r\n};\r\n\r\nexport default memo(IncidentWindow);\r\n","import React, {\r\n  memo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useLayoutEffect,\r\n} from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\n/** Action creators */\r\nimport { incidentChoose } from '../../redux/actionCreators/incidentAction';\r\nimport { incidentRequestSuccessed } from '../../redux/actionCreators/incidentAction';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\nimport { incidentHistoryRequestSuccessed } from '../../redux/actionCreators/incidentAction';\r\n\r\n/** My components */\r\nimport SidebarWrapper from '../Sidebar/SidebarWrapper';\r\nimport IncidentWindow from '../IncidentWindow/IncidentWindow';\r\n\r\n/**Bootstrap components */\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nconst Incident = ({ params, title, badge }) => {\r\n  const { list, history, current } = useSelector(\r\n    (state) => state.incidents,\r\n    shallowEqual,\r\n  );\r\n\r\n  const incidents = useSelector((state) => state.incidents, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const fetchIncident = useCallback(\r\n    (params, actionSuccessed) => {\r\n      dispatch(\r\n        queryApi({\r\n          route: 'incidents',\r\n          actionSuccessed,\r\n          params,\r\n        }),\r\n      );\r\n    },\r\n    // eslint-disable-next-line\r\n    [dispatch],\r\n  );\r\n  useLayoutEffect(() => {\r\n    if (!!params) {\r\n      fetchIncident(params, incidentRequestSuccessed);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [incidents.isUpdate, params]);\r\n  const onClickHistory = useCallback(() => {\r\n    let historyParams = { ...params, history: 'true' };\r\n    fetchIncident(historyParams, incidentHistoryRequestSuccessed);\r\n    // eslint-disable-next-line\r\n  }, [params, fetchIncident, incidents.isUpdate]);\r\n  const [chooseIncidentId, setChooseIncidentId] = useState();\r\n\r\n  //currentIncident хранит текущий инцидент, setCurrentIncident изменяется состояние currentIncident\r\n  useEffect(() => {\r\n    //Получаем новый выбранный инцидент\r\n    const newCurrentIncident = (() => {\r\n      let thisHistory = history.find((item) => item.id === chooseIncidentId);\r\n      let thisList = list.find((item) => item.id === chooseIncidentId);\r\n      if (thisHistory) return thisHistory;\r\n      if (thisList) return thisList;\r\n    })();\r\n    dispatch(incidentChoose(newCurrentIncident));\r\n    // eslint-disable-next-line\r\n  }, [chooseIncidentId, list, history]); // Использовать эффект если изменились параметры chooseIncidentId, list поменяли свое состояние\r\n  const [sidebarList, setSidebarList] = useState([]);\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    setSidebarList(\r\n      list.map((item) => {\r\n        let responsible;\r\n        if (item.responsibleUser) {\r\n          responsible = `(${\r\n            item.responsibleUser.name1\r\n          } ${item.responsibleUser.name2.charAt(\r\n            0,\r\n          )}. ${item.responsibleUser.name3.charAt(0)}.)`;\r\n        } else {\r\n          responsible = '';\r\n        }\r\n        const newItem = {\r\n          id: item.id,\r\n          name: `${item.category ? item.category.name : ''} ${\r\n            item.property ? item.property.name : ''\r\n          } ${item.option ? item.option.name : ''}`,\r\n          createdAt: item.createdAt,\r\n          responsible,\r\n          status: item.statusId,\r\n        };\r\n        return newItem;\r\n      }),\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [list]);\r\n\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col xs={5}>\r\n        <SidebarWrapper\r\n          title={title}\r\n          list={sidebarList}\r\n          onClick={setChooseIncidentId}\r\n          activeId={chooseIncidentId}\r\n          badge={!badge}\r\n          onClickHistory={onClickHistory}\r\n        />\r\n      </Col>\r\n      <Col xs={7}>\r\n        <Container>\r\n          {current.incident ? (\r\n            <IncidentWindow incident={current.incident} myincident={badge} />\r\n          ) : null}\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default memo(Incident);\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n/**My components */\r\nimport Incident from '../component/Incident/Incident';\r\n\r\nconst MainPage = () => {\r\n  const [params, setParams] = useState();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  const [title, setTitle] = useState(`Инциденты`);\r\n  useEffect(() => {\r\n    if (user) {\r\n      setParams({ departmentId: user.departmentId });\r\n      setTitle(`${user.department.name}`);\r\n    }\r\n  }, [user]);\r\n  return <Incident params={params} title={title} />;\r\n};\r\n\r\nexport default memo(MainPage);\r\n","import React, { memo, useEffect, useState, useCallback } from 'react';\r\nimport List from '../List/List';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\nimport { categoryUpdate } from '../../redux/actionCreators/catalogAction';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nconst SettingCatalog = (props) => {\r\n  const dispatch = useDispatch();\r\n  /** ОТДЕЛ */\r\n  // Получаем данные об отделах из стореджа */\r\n  const { department } = useSelector((state) => state.catalog, shallowEqual);\r\n  // Обработчик состояния: хранит текущее значение выделенного отдела */\r\n  const [departmentIdCurrent, setDepartmentIdCurrent] = useState();\r\n\r\n  /** КАТЕГОРИИ */\r\n  // Получаем данные об категориях из стореджа */\r\n  const category = useSelector((state) => state.catalog.list, shallowEqual);\r\n  // Обработчик состояния: хранит текущий лист категорий принадлежащих выбранному отделу */\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  // Изменяет текущий лист категорий, если изменился ID отдела или обновились данные в категориях\r\n  useEffect(() => {\r\n    setCategoryList(\r\n      category.filter((item) => item.departmentId === departmentIdCurrent),\r\n    );\r\n  }, [departmentIdCurrent, category]);\r\n  // Обработчик состояния: хранит в себе id выбранной категории\r\n  const [categoryIdCurrent, setCategoryIdCurrent] = useState();\r\n  // Обработчик состояния: хранит в себе jsx компоненту\r\n  const [categoryJsx, setCategoryJsx] = useState();\r\n  const onSubmit = useCallback(\r\n    function (event, value) {\r\n      event = arguments[1];\r\n      value = arguments[2];\r\n      const { route } = arguments[0];\r\n      event.preventDefault();\r\n      if (value) {\r\n        const data = {\r\n          name: value,\r\n          categoryId: categoryIdCurrent,\r\n          departmentId: departmentIdCurrent,\r\n        };\r\n        dispatch(\r\n          queryApi({\r\n            method: 'post',\r\n            route,\r\n            actionUpdate: categoryUpdate,\r\n            data,\r\n          }),\r\n        );\r\n      }\r\n    },\r\n    [departmentIdCurrent, dispatch, categoryIdCurrent],\r\n  );\r\n  const onDelete = useCallback(\r\n    function () {\r\n      const { route } = arguments[0];\r\n      const id = arguments[1];\r\n      const conf = window.confirm(\r\n        'Все инциденты связаные с этим удаляться. Вы точно хотите удалить?',\r\n      );\r\n\r\n      if (conf) {\r\n        dispatch(\r\n          queryApi({\r\n            method: 'delete',\r\n            actionUpdate: categoryUpdate,\r\n            route,\r\n            id,\r\n          }),\r\n        );\r\n      }\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const onFavorites = useCallback(\r\n    ({ list, route }, id) => {\r\n      // console.log('id', id);\r\n      // console.log('actionUpdate', actionUpdate);\r\n      // console.log('list', list);\r\n      // console.log('route', route);\r\n      dispatch(\r\n        queryApi({\r\n          id,\r\n          actionUpdate: categoryUpdate,\r\n          route,\r\n          method: 'put',\r\n          data: {\r\n            level: Number(!list.find((item) => item.id === id).level),\r\n          },\r\n        }),\r\n      );\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // Эффект отрисовки компонента\r\n  useEffect(() => {\r\n    if (departmentIdCurrent) {\r\n      let route = 'categories';\r\n      setCategoryJsx(\r\n        <List\r\n          title={'Категории'}\r\n          list={categoryList}\r\n          onSubmit={onSubmit.bind(null, { route })}\r\n          onDelete={onDelete.bind(null, { route })}\r\n          onClick={setCategoryIdCurrent}\r\n          activeId={categoryIdCurrent}\r\n          onFavorites={onFavorites.bind(null, {\r\n            route,\r\n            list: categoryList,\r\n          })}\r\n          xs={3}\r\n        />,\r\n      );\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [departmentIdCurrent, categoryList, categoryIdCurrent]);\r\n\r\n  /** Параметры и Опции */\r\n  const [categorySubList, setCategorySubList] = useState(null);\r\n  useEffect(() => {\r\n    setCategorySubList(\r\n      categoryList.find((item) => item.id === categoryIdCurrent),\r\n    );\r\n  }, [categoryIdCurrent, categoryList]);\r\n  const [propertyJsx, setPropertyJsx] = useState();\r\n  const [optionJsx, setOptionJsx] = useState();\r\n  useEffect(() => {\r\n    if (categorySubList) {\r\n      let route = 'properties';\r\n      setPropertyJsx(\r\n        <List\r\n          title=\"Параметры\"\r\n          list={categorySubList.properties}\r\n          onSubmit={onSubmit.bind(null, { route })}\r\n          onDelete={onDelete.bind(null, { route })}\r\n          onFavorites={onFavorites.bind(null, {\r\n            route,\r\n            list: categorySubList.properties,\r\n          })}\r\n          xs={3}\r\n        />,\r\n      );\r\n      route = 'options';\r\n      setOptionJsx(\r\n        <List\r\n          title=\"Опции\"\r\n          list={categorySubList.options}\r\n          onSubmit={onSubmit.bind(null, { route })}\r\n          onDelete={onDelete.bind(null, { route })}\r\n          onFavorites={onFavorites.bind(null, {\r\n            route,\r\n            list: categorySubList.options,\r\n          })}\r\n          xs={3}\r\n        />,\r\n      );\r\n    } else {\r\n      setPropertyJsx(null);\r\n      setOptionJsx(null);\r\n    }\r\n  }, [categorySubList, onDelete, onSubmit, onFavorites]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Каталог</h2>\r\n      <Row>\r\n        <List\r\n          title={'Отделы'}\r\n          list={department}\r\n          onClick={setDepartmentIdCurrent}\r\n          activeId={departmentIdCurrent}\r\n          xs={3}\r\n        />\r\n        {categoryJsx}\r\n        {propertyJsx}\r\n        {optionJsx}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(SettingCatalog);\r\n","import React, { memo } from 'react';\r\nimport List from '../List/List';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport { queryApi } from '../../redux/actionCreators/queryApiAction';\r\nimport { statusUpdate } from '../../redux/actionCreators/statusAction';\r\n\r\nimport { Col } from 'react-bootstrap';\r\n\r\nconst SettingStatus = (props) => {\r\n  const { list } = useSelector((state) => state.status, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const route = 'status';\r\n  const actionUpdate = statusUpdate;\r\n  //! Определить функцию обработки события\r\n  // Define function handle submit\r\n  const onSubmit = (event, value) => {\r\n    event.preventDefault();\r\n    if (value) {\r\n      const data = { name: value };\r\n      dispatch(\r\n        queryApi({\r\n          method: 'post',\r\n          route,\r\n          actionUpdate,\r\n          data,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n  const onDelete = (id) => {\r\n    dispatch(\r\n      queryApi({\r\n        method: 'delete',\r\n        actionUpdate,\r\n        route,\r\n        id,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Col>\r\n      <h2>Статус</h2>\r\n      <List list={list} onSubmit={onSubmit} onDelete={onDelete} xs={5} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default memo(SettingStatus);\r\n","import React, { memo, useState, useEffect, Suspense } from 'react';\r\nimport Sidebar from '../component/Sidebar/Sidebar';\r\nimport SettingCatalog from '../component/SettingCatalog/SettingCatalog';\r\nimport SettingStatus from '../component/SettingStatus/SettingStatus';\r\n/**Bootstrap components */\r\nimport { Row, Col } from 'react-bootstrap';\r\nconst SettingPositions = React.lazy(() =>\r\n  import('../component/SettingPositions/SettingPositions'),\r\n);\r\n\r\nconst SettingPage = (props) => {\r\n  const [activeId, setActiveId] = useState(0);\r\n  const list = [\r\n    { name: 'Каталог', id: 1 },\r\n    { name: 'Статус', id: 2 },\r\n    { name: 'Должности', id: 3 },\r\n  ];\r\n  const [jsxContent, setJsxContent] = useState();\r\n  useEffect(() => {\r\n    switch (activeId) {\r\n      case 0:\r\n        setJsxContent('');\r\n        break;\r\n      case 1:\r\n        setJsxContent(<SettingCatalog />);\r\n        break;\r\n      case 2:\r\n        setJsxContent(<SettingStatus />);\r\n        break;\r\n      case 3:\r\n        setJsxContent(\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <SettingPositions />\r\n          </Suspense>,\r\n        );\r\n        break;\r\n      default:\r\n        setJsxContent(\r\n          <p className=\"align-content-center\">\r\n            Контент находиться в разработке\r\n          </p>,\r\n        );\r\n        break;\r\n    }\r\n  }, [activeId]);\r\n  return (\r\n    <Row className={'m-1'}>\r\n      <Col xs={3}>\r\n        <h1>Настройки</h1>\r\n        <Sidebar list={list} activeId={activeId} onClick={setActiveId} />\r\n      </Col>\r\n\r\n      <Col xs={9}>{jsxContent}</Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default memo(SettingPage);\r\n","import React, { memo } from 'react';\r\n\r\n/**Bootstrap components */\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst CreateIncidentModalSelect = ({ onChange, list, title = '' }) => {\r\n  return (\r\n    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n      {!!title ? <Form.Label>{title}</Form.Label> : null}\r\n      <Form.Control as=\"select\" onChange={onChange}>\r\n        {list.length\r\n          ? list.map((item) => {\r\n              return (\r\n                <option value={item.id} key={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })\r\n          : null}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default memo(CreateIncidentModalSelect);\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport CreateIncidentSelect from '../CreateIncidentSelect/CreateIncidentSelect';\r\n\r\n/**Bootstrap components */\r\nimport { Form } from 'react-bootstrap';\r\nimport { incidentFetching } from '../../redux/actionCreators/incidentAction';\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\nconst socket = openSocket('http://192.168.214.106:8000');\r\n\r\nconst CreateIncidentModel = ({ handleClose, showModal, list, user }) => {\r\n  const dateNow = new Date();\r\n  const [incident, setIncident] = useState({\r\n    startWork: null,\r\n    dateCreate: `${dateNow.getFullYear()}-${dateNow.getMonth()}-${dateNow.getDate()} ${dateNow.getHours()}:${dateNow.getMinutes()}:${dateNow.getSeconds()}`,\r\n    currentResponsible: null,\r\n    text: '',\r\n    level: 0,\r\n    statusId: 0,\r\n    departmentId: null,\r\n    positionId: null,\r\n    name: `${user.name1} ${user.name2} ${user.name3}`,\r\n    email: user.email,\r\n    userNumber: user.number,\r\n    phone1: user.phone1,\r\n    phone2: user.phone2,\r\n    categoryId: list[0] ? list[0].id : null,\r\n    propertyId: list[0].properties[0] ? list[0].properties[0].id : null,\r\n    optionId: list[0].options[0] ? list[0].options[0].id : null,\r\n  });\r\n\r\n  //? Инициализируем состояние номера текущей категории\r\n  const [currentIdCategory, setCurrentIdCategory] = useState(\r\n    incident.categoryId,\r\n  );\r\n  //? Инициализируем состояние номера текущего параметра\r\n  const [currentIdProperty, setCurrentIdProperty] = useState(\r\n    incident.propertyId,\r\n  );\r\n  //? Инициализируем состояние номера текущей опции\r\n  const [currentIdOption, setCurrentIdOption] = useState(incident.optionId);\r\n\r\n  //? Инициализируем состояние текущей категории\r\n  const [currentCategory, setCurrentCategory] = useState(\r\n    list.filter((item) => item.id === currentIdCategory),\r\n  );\r\n\r\n  //? Устанавливаем эффект на каждое изменение состояния номера текущей категории\r\n  useEffect(() => {\r\n    let categoryId = currentIdCategory;\r\n    let propertyId = currentIdProperty;\r\n    let optionId = currentIdOption;\r\n\r\n    // console.log('categoryId', categoryId);\r\n    // console.log('propertyId', propertyId);\r\n    // console.log('optionId', optionId);\r\n\r\n    const newCurrentCategory = list.filter(\r\n      (item) => item.id === currentIdCategory,\r\n    );\r\n\r\n    if (categoryId !== incident.categoryId) {\r\n      if (!!newCurrentCategory[0].properties[0]) {\r\n        propertyId = newCurrentCategory[0].properties[0].id;\r\n      } else propertyId = null;\r\n      if (!!newCurrentCategory[0].options[0]) {\r\n        optionId = newCurrentCategory[0].options[0].id;\r\n      } else optionId = null;\r\n    }\r\n    setCurrentCategory(newCurrentCategory);\r\n    setIncident({\r\n      ...incident,\r\n      departmentId: currentCategory[0].departmentId,\r\n      categoryId,\r\n      propertyId,\r\n      optionId,\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [currentIdCategory, currentIdProperty, currentIdOption]);\r\n\r\n  //Функция собирающая из списка и функции изменения состояния номера элемент html\r\n  const listSelect = (list, setCurrent, title) => {\r\n    if (list.length)\r\n      return (\r\n        <CreateIncidentSelect\r\n          list={list}\r\n          onChange={(event) => setCurrent(Number(event.target.value))}\r\n          title={title}\r\n        />\r\n      );\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(incidentFetching('post', incident));\r\n\r\n    socket.emit('departmentId', currentCategory[0].departmentId);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <ModalWindow\r\n      show={showModal}\r\n      onHide={handleClose}\r\n      title={'Создание инцидента'}\r\n      onSubmit={onSubmit}\r\n      textOk={'Отправить'}\r\n      textNot={'Отменить'}\r\n    >\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Control type=\"text\" disabled value={`${incident.name}`} />\r\n        <Form.Text className=\"text-muted\">\r\n          Если имя в этом поле не совпадает с Вашим, обратитесь к\r\n          администратору.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {listSelect(list, setCurrentIdCategory, 'Выберите категорию')}\r\n      {listSelect(currentCategory[0].properties, setCurrentIdProperty)}\r\n      {listSelect(currentCategory[0].options, setCurrentIdOption)}\r\n\r\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n        <Form.Label>Содержание обращения</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          value={incident.text}\r\n          placeholder=\"Опишите подробно ситуацию\"\r\n          onChange={(event) => {\r\n            setIncident({ ...incident, text: event.target.value });\r\n          }}\r\n        />\r\n      </Form.Group>\r\n    </ModalWindow>\r\n  );\r\n};\r\n\r\nexport default memo(CreateIncidentModel);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport CreateIncidentModal from '../CreateIncident/CreateIncident';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\n/**Bootstrap component */\r\nimport { Navbar, Nav, Image, Button, Badge } from 'react-bootstrap';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n//? Font Awesome иконки\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = (props) => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { list } = useSelector((state) => state.catalog);\r\n  const listIncident = useSelector(\r\n    (state) => state.incidents.list,\r\n    shallowEqual,\r\n  );\r\n  const [access, setAccess] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClose = () => setShowModal(false);\r\n  const handleOpen = () => setShowModal(true);\r\n\r\n  /**Получаем полное имя при изменение сущности users в store */\r\n  const [fullName, setFullName] = useState('');\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      setFullName(`${user.name1 || 'N'} ${user.name2 || 'N'}`);\r\n      setAccess(1);\r\n    } else {\r\n      setFullName(`Гость`);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <nav className=\"mb-1\">\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n        <Navbar.Brand>Service Desk</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className={`${styles.nav} mr-auto`}>\r\n            <Nav.Item>\r\n              <NavLink\r\n                to=\"/\"\r\n                activeClassName={`btn-light`}\r\n                className={`btn btn-link align-middle ${styles.nav__button}`}\r\n              >\r\n                Рабочая панель\r\n                {!!listIncident.length ? (\r\n                  <Badge variant=\"primary\" className={'ml-1'}>\r\n                    {\r\n                      listIncident.filter((item) => Number(item.statusId) === 0)\r\n                        .length\r\n                    }\r\n                  </Badge>\r\n                ) : undefined}\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/myincidents\"\r\n                activeClassName={`btn-light ${styles.nav__button}`}\r\n                className={`btn btn-link align-middle ${styles.nav__button}`}\r\n              >\r\n                Мои инциденты\r\n              </NavLink>\r\n            </Nav.Item>{' '}\r\n            <Nav.Item>\r\n              <Button onClick={handleOpen}>Создать инцидент</Button>\r\n              {!!showModal && list.length && user ? (\r\n                <CreateIncidentModal\r\n                  handleClose={handleClose}\r\n                  showModal={showModal}\r\n                  user={user}\r\n                  list={list}\r\n                />\r\n              ) : null}\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Item>\r\n              <Nav.Link href=\"\">\r\n                <div className={styles.user}>\r\n                  <Navbar.Text className=\"pr-1\">{`${fullName}`}</Navbar.Text>\r\n                  <div className={styles.avatar}>\r\n                    <Image\r\n                      src={user ? user.photo : ''}\r\n                      roundedCircle\r\n                      className={styles.avatar__img}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            {access === 1 ? (\r\n              <Nav.Item className={styles.nav__item}>\r\n                <NavLink\r\n                  to=\"/setting\"\r\n                  activeClassName={'btn-light'}\r\n                  className=\"btn btn-link align-middle\"\r\n                >\r\n                  <FontAwesomeIcon icon={faCog} />\r\n                </NavLink>\r\n              </Nav.Item>\r\n            ) : null}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default memo(Header);\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\n/**My components */\r\nimport Incident from '../component/Incident/Incident';\r\n\r\nconst MyIncidentPage = (props) => {\r\n  const [params, setParams] = useState();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setParams({\r\n        userNumber: user.number,\r\n        // departmentId: user.departmentId,\r\n      });\r\n    }\r\n  }, [user]);\r\n  return <Incident params={params} badge={true} />;\r\n};\r\n\r\nexport default memo(MyIncidentPage);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toastiry.scss';\r\nimport useSound from 'use-sound';\r\n\r\nimport openSocket from 'socket.io-client';\r\nimport { incidentCreate } from '../../redux/actionCreators/incidentAction';\r\n\r\nconst socket = openSocket('http://192.168.214.106:8000');\r\ninterface Props {\r\n  data: any;\r\n  title: string;\r\n}\r\n\r\nconst Alert: React.FC<Props> = () => {\r\n  const user = useSelector((state: any) => state.auth.user, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const [play] = useSound('../../sounds/SpeechOn.wav', {\r\n    volume: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(String(user?.departmentId), (data: any) => {\r\n      dispatch(incidentCreate());\r\n      play();\r\n      toast.info(\r\n        <div className={'alertCustom'}>\r\n          <div className={'alertCustom__title'}>\r\n            <span role=\"img\" aria-label=\"inbox\">\r\n              📥\r\n            </span>\r\n            <h6>Поступил новый инцидент</h6>\r\n          </div>\r\n        </div>,\r\n      );\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [user, dispatch]);\r\n\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={false}\r\n      newestOnTop\r\n      closeOnClick={false}\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(Alert);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport { categoryRequestSuccessed } from './redux/actionCreators/catalogAction';\r\nimport { authRequestSuccessed } from './redux/actionCreators/authAction';\r\nimport { queryApi } from './redux/actionCreators/queryApiAction';\r\nimport { departmentRequestSuccessed } from './redux/actionCreators/departmentAction';\r\nimport { statusRequestSeccessed } from './redux/actionCreators/statusAction';\r\nimport MainPage from './page/MainPage';\r\nimport SettingPage from './page/SettingPage';\r\nimport Header from './component/Header/Header';\r\nimport MyIncidentPage from './page/MyIncidentPage';\r\nimport axios from 'axios';\r\nimport Alert from './component/Alert/Alert';\r\n\r\nconst App = (props) => {\r\n  const catalog = useSelector((state) => state.catalog, shallowEqual);\r\n  const status = useSelector((state) => state.status, shallowEqual);\r\n\r\n  const state = useSelector((state) => state, shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // console.log(state);\r\n  }, [state]);\r\n  useEffect(() => {\r\n    // dispatch(authFetching(window.ipGlobal));\r\n    axios\r\n      .get('http://api.nccp-eng.ru/', {\r\n        params: {\r\n          method: 'auth.start',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(\r\n          queryApi({\r\n            route: 'users',\r\n            actionSuccessed: authRequestSuccessed,\r\n            params: { number: res.data.number },\r\n          }),\r\n        );\r\n      });\r\n    dispatch(\r\n      queryApi({\r\n        route: 'departments',\r\n        actionSuccessed: departmentRequestSuccessed,\r\n      }),\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (catalog.isUpdate) {\r\n      dispatch(\r\n        queryApi({\r\n          route: 'categories',\r\n          actionSuccessed: categoryRequestSuccessed,\r\n        }),\r\n      );\r\n    }\r\n  }, [catalog.isUpdate, dispatch]);\r\n  useEffect(() => {\r\n    if (status.isUpdate) {\r\n      dispatch(\r\n        queryApi({ route: 'status', actionSuccessed: statusRequestSeccessed }),\r\n      );\r\n    }\r\n  }, [status.isUpdate, dispatch]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Alert />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={MainPage} />\r\n        <Route path=\"/setting\" component={SettingPage} />\r\n        <Route path=\"/myincidents\" component={MyIncidentPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default memo(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"siderbar_icon__1OJVl\",\"icon_right\":\"siderbar_icon_right__1ggeQ\",\"icon_left\":\"siderbar_icon_left__2h_Xh\",\"item\":\"siderbar_item__1aUnm\",\"item__body\":\"siderbar_item__body__3UYy0\",\"item__id\":\"siderbar_item__id__1xPib\",\"item__text\":\"siderbar_item__text__1rhRk\",\"item__text_span\":\"siderbar_item__text_span__aTR9A\",\"item__date\":\"siderbar_item__date__1cAUY\",\"active\":\"siderbar_active__Hbj6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__20rXn\",\"nav__item\":\"styles_nav__item__14i8u\",\"nav__button\":\"styles_nav__button__O9Duu\",\"user\":\"styles_user__37C1v\",\"avatar\":\"styles_avatar__2A89E\",\"avatar__img\":\"styles_avatar__img__dPlyx\"};","import React, { memo } from 'react';\r\nimport { IListButtonFavorites } from './interface';\r\n//? Bootstrap\r\nimport { Button } from 'react-bootstrap';\r\n//? Font Awesome иконки\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ListButtonFavorites: React.FC<IListButtonFavorites> = ({\r\n  onFavorites,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"sm\"\r\n        variant=\"warning\"\r\n        onClick={() => {\r\n          //@ts-ignore\r\n          onFavorites();\r\n        }}\r\n      >\r\n        <FontAwesomeIcon icon={faStar} />\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\nexport default memo(ListButtonFavorites);\r\n","import React, { memo } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\n//? Bootstrap\r\nimport { Row, Col, ListGroup, Button } from 'react-bootstrap';\r\n//? Font Awesome иконки\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport ListButtonFavorites from './ListButtonFavorites';\r\n\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst ListItem = ({ filterList, onClick, onDelete, onFavorites, activeId }) => {\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {!!filterList.length ? (\r\n        filterList\r\n          .sort((a, b) => {\r\n            if (b.name < a.name) {\r\n              return 1;\r\n            } else {\r\n              return -1;\r\n            }\r\n          })\r\n          .map((item) => {\r\n            return (\r\n              <Fade key={item.id} opposite collapse bottom>\r\n                <ListGroup.Item\r\n                  key={item.id}\r\n                  className={item.id === activeId ? `active` : undefined}\r\n                  variant={!!item.level ? 'warning' : undefined}\r\n                >\r\n                  <Row>\r\n                    <Col xs={9}>\r\n                      <div\r\n                        className={!!onClick ? styles.item_pointer : undefined}\r\n                        onClick={() => {\r\n                          if (!!onClick) {\r\n                            //@ts-ignore\r\n                            onClick(item.id);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <span>{item.name}</span>\r\n                      </div>\r\n                    </Col>\r\n                    <Col xs={3} className={styles.buttonGroup}>\r\n                      <div className={styles.buttonGroup_flexRow}>\r\n                        {!!onDelete && !item.noChange ? (\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"danger\"\r\n                            onClick={() => {\r\n                              //@ts-ignore\r\n                              onDelete(item.id);\r\n                            }}\r\n                          >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                          </Button>\r\n                        ) : null}\r\n                        {!!onFavorites ? (\r\n                          <ListButtonFavorites\r\n                            onFavorites={onFavorites.bind(null, item.id)}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </Fade>\r\n            );\r\n          })\r\n      ) : (\r\n        <small className=\"text-muted text-center\">Данные отсутствуют</small>\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\nexport default memo(ListItem);\r\n","import React, { memo, useState, useLayoutEffect } from 'react';\r\nimport { IList, TList } from './interface';\r\nimport ListItem from './ListItem';\r\n\r\n//? Bootstrap\r\nimport { Col, Form, InputGroup, FormControl } from 'react-bootstrap';\r\n//? Font Awesome иконки\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faFolderPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst List: React.FC<IList> = ({\r\n  title,\r\n  onSubmit,\r\n  onDelete,\r\n  onClick,\r\n  activeId,\r\n  list,\r\n  onFavorites,\r\n  xs,\r\n}) => {\r\n  const [input, setInput] = useState('');\r\n\r\n  const [filterList, setFilterList] = useState<TList[]>(list);\r\n  const [filter, setFilter] = useState('');\r\n  useLayoutEffect(() => {\r\n    setFilterList(\r\n      list.filter(\r\n        (item) => ~item.name.toLowerCase().indexOf(filter.toLowerCase()),\r\n      ),\r\n    );\r\n  }, [list, filter]);\r\n  if (Array.isArray(list)) {\r\n    return (\r\n      <Col xs={xs}>\r\n        <h2>{title}</h2>\r\n        <InputGroup className=\"mb-1\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon1\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            placeholder=\"Поиск...\"\r\n            aria-label=\"Ведущий специалист\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(event: any) => {\r\n              setFilter(event.target.value);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n        {!!onSubmit ? (\r\n          <Form\r\n            onSubmit={(event: any) => {\r\n              if (!!onSubmit) {\r\n                //@ts-ignore\r\n                onSubmit(event, input);\r\n                setInput('');\r\n              }\r\n            }}\r\n          >\r\n            <Form.Group>\r\n              <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    <FontAwesomeIcon icon={faFolderPlus} />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder='Введите название и нажмите \"Enter\"'\r\n                  value={input}\r\n                  onChange={(event: any) => {\r\n                    setInput(event.target.value);\r\n                  }}\r\n                />\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form>\r\n        ) : null}\r\n\r\n        <ListItem\r\n          filterList={filterList}\r\n          activeId={activeId}\r\n          onClick={onClick}\r\n          onDelete={onDelete}\r\n          onFavorites={onFavorites}\r\n        />\r\n      </Col>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default memo(List);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordion\":\"sidebarHistory_accordion__u_uMR\",\"item\":\"sidebarHistory_item__2Deig\",\"body\":\"sidebarHistory_body__2An-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment__header\":\"styles_comment__header__1jyUp\",\"table\":\"styles_table__gnpPI\",\"window\":\"styles_window__1xKut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_pointer\":\"styles_item_pointer__Ecpw2\",\"spinner\":\"styles_spinner__3GZkI\",\"buttonGroup\":\"styles_buttonGroup__2xFGT\",\"buttonGroup_flexRow\":\"styles_buttonGroup_flexRow__2U2YD\"};","/** Константы для авторизации */\r\nexport const AUTH_FETCHING = 'AUTH_FETCHING';\r\nexport const AUTH_REQUEST_SENDD = 'AUTH_REQUEST_SENDD';\r\nexport const AUTH_REQUEST_SUCCESSED = 'AUTH_REQUEST_SUCCESSED';\r\nexport const START_REQUEST_SUCCESSED = 'START_REQUEST_SUCCESSED';\r\n\r\n/** Константы для категории*/\r\nexport const CATALOG_FETCHING = 'CATALOG_FETCHING';\r\nexport const CATALOG_REQUEST_SENDD = 'CATALOG_REQUEST_SENDD';\r\nexport const CATALOG_REQUEST_SUCCESSED = 'CATALOG_REQUEST_SUCCESSED';\r\nexport const CATALOG_POST = 'CATALOG_POST';\r\nexport const CATALOG_UPDATE = 'CATALOG_UPDATE';\r\n\r\n/** Константы для параметров*/\r\nexport const PROPERTY_POST = 'PROPERTY_POST';\r\n\r\n/** Константы для опций*/\r\nexport const OPTION_POST = 'OPTION_POST';\r\n\r\n/** Константы для инцидентов */\r\nexport const INCIDENT_FETCHING = 'INCIDENT_FETCHING';\r\nexport const INCIDENT_REQUEST_SENDD = 'INCIDENT_REQUEST_SENDD';\r\nexport const INCIDENT_REQUEST_SUCCESSED = 'INCIDENT_REQUEST_SUCCESSED';\r\nexport const INCIDENT_CREATE = 'INCIDENT_CREATE';\r\nexport const INCIDENT_CHOOSE = 'INCIDENT_CHOOSE';\r\nexport const MY_INCIDENT_REQUEST_SUCCESSED = 'MY_INCIDENT_REQUEST_SUCCESSED';\r\nexport const INCIDENT_HISTORY_REQUEST_SUCCESSED =\r\n  'INCIDENT_HISTORY_REQUEST_SUCCESSED';\r\n\r\n/** Константы для отделов */\r\nexport const DEPARTMENT_FETCHING = 'DEPARTMENT_FETCHING';\r\nexport const DEPARTMENT_REQUEST_SENDD = 'DEPARTMENT_REQUEST_SENDD';\r\nexport const DEPARTMENT_REQUEST_SUCCESSED = 'DEPARTMENT_REQUEST_SUCCESSED';\r\n\r\n/** Запрос REST API */\r\nexport const QUERY_API = 'QUERY_API';\r\n\r\n/** Константы для статус */\r\nexport const STATUS_REQUEST_SUCCESSED = 'STATUS_REQUEST_SUCCESSED';\r\nexport const STATUS_UPDATE = 'STATUS_UPDATE';\r\n\r\n/**Должности */\r\nexport const POSITIONS_REQUEST_SUCCESSED = 'POSITIONS_REQUEST_SUCCESSED';\r\nexport const POSITIONS_UPDATE = 'POSITIONS_UPDATE';\r\n\r\n/**Пользователи */\r\nexport const USERS_REQUEST_SUCCESSED = 'USERS_REQUEST_SUCCESSED';\r\nexport const USERS_UPDATE = 'USERS_UPDATE';\r\n\r\n/**ERROR_CLOSE */\r\nexport const ERROR_CLOSE = 'ERROR_CLOSE';\r\n"],"sourceRoot":""}